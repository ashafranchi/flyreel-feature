{"ast":null,"code":"var _jsxFileName = \"/Users/asha/Downloads/flyreel-feature/acmequakes/src/MapContainer.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { Button } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst center = {\n  lng: 37.7791,\n  lat: 122.4158\n};\n\nconst MapContainer = ({\n  data\n}) => {\n  const mapStyles = () => {\n    return {\n      marginTop: \"-20px\",\n      height: \"100vh\",\n      width: \"100%\"\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      id: \"script-loader\",\n      googleMapsApiKey: \"AIzaSyDIrnzXxTpkpUpqVagW4TLsMSjVyUQTmfY\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        id: \"example-map\",\n        mapContainerStyle: mapStyles(),\n        draggable: true,\n        zoom: 13,\n        center: center,\n        children: data.map((quake, index) => {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            title: quake.properties.place,\n            name: quake.properties.place,\n            position: {\n              lat: quake.geometry.coordinates[1],\n              lng: quake.geometry.coordinates[0]\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["/Users/asha/Downloads/flyreel-feature/acmequakes/src/MapContainer.js"],"names":["React","useState","useEffect","useRef","GoogleMap","LoadScript","Marker","InfoWindow","Button","center","lng","lat","MapContainer","data","mapStyles","marginTop","height","width","map","quake","index","properties","place","geometry","coordinates"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,EAAwCC,UAAxC,QAA0D,wBAA1D;AACA,SAASC,MAAT,QAAuB,kBAAvB;;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,OADQ;AAEbC,EAAAA,GAAG,EAAE;AAFQ,CAAf;;AAKA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAEjC,QAAMC,SAAS,GAAG,MAAM;AACpB,WAAO;AACLC,MAAAA,SAAS,EAAE,OADN;AAELC,MAAAA,MAAM,EAAE,OAFH;AAGLC,MAAAA,KAAK,EAAE;AAHF,KAAP;AAKD,GANH;;AAQG,sBACD;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,gBAAgB,EAAC,yCAFnB;AAAA,6BAIE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,iBAAiB,EAAEH,SAAS,EAF9B;AAGE,QAAA,SAAS,EAAE,IAHb;AAIE,QAAA,IAAI,EAAE,EAJR;AAKE,QAAA,MAAM,EAAEL,MALV;AAAA,kBAQII,IAAI,CAACK,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzB,8BACE,QAAC,MAAD;AAEE,YAAA,KAAK,EAAED,KAAK,CAACE,UAAN,CAAiBC,KAF1B;AAGE,YAAA,IAAI,EAAEH,KAAK,CAACE,UAAN,CAAiBC,KAHzB;AAIE,YAAA,QAAQ,EAAE;AACRX,cAAAA,GAAG,EAAEQ,KAAK,CAACI,QAAN,CAAeC,WAAf,CAA2B,CAA3B,CADG;AAERd,cAAAA,GAAG,EAAES,KAAK,CAACI,QAAN,CAAeC,WAAf,CAA2B,CAA3B;AAFG;AAJZ,aACOJ,KADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAWD,SAZD;AARJ;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF,mBADC;AAgCF,CA1CH;;KAAMR,Y;AA4CN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { Button } from \"@chakra-ui/react\";\n\nconst center = {\n  lng: 37.7791,\n  lat: 122.4158,\n};\n\nconst MapContainer = ({ data }) => {\n\n  const mapStyles = () => {\n      return {\n        marginTop: \"-20px\",\n        height: \"100vh\",\n        width: \"100%\"\n      }\n    }\n\n     return (\n    <>\n      <LoadScript\n        id=\"script-loader\"\n        googleMapsApiKey='AIzaSyDIrnzXxTpkpUpqVagW4TLsMSjVyUQTmfY'\n      >\n        <GoogleMap\n          id='example-map'\n          mapContainerStyle={mapStyles()}\n          draggable={true}\n          zoom={13}\n          center={center}\n        >\n          {\n            data.map((quake, index) => {\n              return (\n                <Marker \n                  key={index}\n                  title={quake.properties.place}\n                  name={quake.properties.place}\n                  position={{\n                    lat: quake.geometry.coordinates[1],\n                    lng: quake.geometry.coordinates[0]\n                  }}\n              />\n              )\n            })\n          }\n        </GoogleMap>\n      </LoadScript>\n    </>\n     )\n  }\n\nexport default MapContainer;"]},"metadata":{},"sourceType":"module"}