{"ast":null,"code":"var _jsxFileName = \"/Users/asha/Downloads/flyreel-feature/acmequakes/src/MapContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { Button } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MapContainer = ({\n  array,\n  isAdding\n}) => {\n  _s();\n\n  const [selected, setSelected] = useState({});\n  const markerRef = useRef(null);\n  const defaultCenter = {\n    lat: 41.3851,\n    lng: 2.1734\n  };\n\n  const onSelect = item => {\n    setSelected(item);\n  };\n\n  const success = position => {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    const currentPosition = {\n      lat: latitude,\n      lng: longitude\n    };\n    setCurrentPosition(currentPosition);\n  };\n\n  const onMarkerDragEnd = e => {\n    const lat = e.latLng.lat();\n    const lng = e.latLng.lng();\n    setCurrentPosition({\n      lat,\n      lng\n    });\n  };\n\n  const footer = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"location-text\",\n        children: \"Choose location and press\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => getLocation(currentPosition),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n\n  const mapStyles = () => {\n    if (!isAdding) {\n      return {\n        marginTop: \"-20px\",\n        height: \"100vh\",\n        width: \"100%\"\n      };\n    } else {\n      return {\n        marginTop: \"-20px\",\n        height: \"80vh\",\n        width: \"100%\"\n      };\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      id: \"script-loader\",\n      googleMapsApiKey: \"AIzaSyDIrnzXxTpkpUpqVagW4TLsMSjVyUQTmfY\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        id: \"example-map\",\n        mapContainerStyle: mapStyles(),\n        draggable: true,\n        zoom: 13,\n        center: currentPosition.lat ? currentPosition : defaultCenter,\n        children: data.map(item => {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: data.location // onClick={() => onSelect(item)}\n\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MapContainer, \"xYg74jTsm5UnYkaYgoyiEZiH7Ec=\");\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["/Users/asha/Downloads/flyreel-feature/acmequakes/src/MapContainer.js"],"names":["React","useState","useEffect","useRef","GoogleMap","LoadScript","Marker","InfoWindow","Button","MapContainer","array","isAdding","selected","setSelected","markerRef","defaultCenter","lat","lng","onSelect","item","success","position","latitude","coords","longitude","currentPosition","setCurrentPosition","onMarkerDragEnd","e","latLng","footer","getLocation","mapStyles","marginTop","height","width","data","map","location","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { Button } from \"@chakra-ui/react\";\n\nconst MapContainer = ({ array, isAdding }) => {\n\n  const [ selected, setSelected ] = useState({});\n\n  const markerRef = useRef(null);\n\n  const defaultCenter = {\n    lat: 41.3851, lng: 2.1734\n  }\n\n  const onSelect = item => {\n    setSelected(item);\n  }\n\n  const success = (position) => {\n    const latitude  = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    const currentPosition = {\n      lat: latitude,\n      lng: longitude\n    }\n    setCurrentPosition(currentPosition);\n  }\n\n  const onMarkerDragEnd = (e) => {\n    const lat = e.latLng.lat();\n    const lng = e.latLng.lng();\n    setCurrentPosition({ lat, lng})\n  };\n\n  const footer = (\n    <div className=\"footer\">\n      <div className=\"inner-footer\">\n      <span className=\"location-text\">Choose location and press</span>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => getLocation(currentPosition)}>\n        Next\n      </Button>\n      </div>\n    </div>\n  );\n\n  const mapStyles = () => {\n    if (!isAdding) {\n      return {\n        marginTop: \"-20px\",\n        height: \"100vh\",\n        width: \"100%\"\n      }\n    } else {\n      return {\n        marginTop: \"-20px\",\n        height: \"80vh\",\n        width: \"100%\"\n      }\n    }\n  }\n\n     return (\n    <>\n      <LoadScript\n        id=\"script-loader\"\n        googleMapsApiKey='AIzaSyDIrnzXxTpkpUpqVagW4TLsMSjVyUQTmfY'\n      >\n        <GoogleMap\n          id='example-map'\n          mapContainerStyle={mapStyles()}\n          draggable={true}\n          zoom={13}\n          center={currentPosition.lat ? currentPosition : defaultCenter}\n        >\n          {\n            data.map(item => {\n              return (\n                <Marker \n                key={item.id}\n                position={data.location}\n                // onClick={() => onSelect(item)}\n              />\n              )\n            })\n          }\n        </GoogleMap>\n      </LoadScript>\n    </>\n     )\n  }\n\nexport default MapContainer;"]},"metadata":{},"sourceType":"module"}